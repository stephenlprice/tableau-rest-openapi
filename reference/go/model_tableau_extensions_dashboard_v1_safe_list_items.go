/*
API Reference for Tableau Resource Versioned RESTful Endpoints

>The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)

API version: 2021.2
Contact: stellopricint@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TableauExtensionsDashboardV1SafeListItems A list of dashboard extensions allowed to run on a site.
type TableauExtensionsDashboardV1SafeListItems struct {
	SafeListItems []TableauExtensionsDashboardV1SafeListItem `json:"safe_list_items,omitempty"`
}

// NewTableauExtensionsDashboardV1SafeListItems instantiates a new TableauExtensionsDashboardV1SafeListItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableauExtensionsDashboardV1SafeListItems() *TableauExtensionsDashboardV1SafeListItems {
	this := TableauExtensionsDashboardV1SafeListItems{}
	return &this
}

// NewTableauExtensionsDashboardV1SafeListItemsWithDefaults instantiates a new TableauExtensionsDashboardV1SafeListItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableauExtensionsDashboardV1SafeListItemsWithDefaults() *TableauExtensionsDashboardV1SafeListItems {
	this := TableauExtensionsDashboardV1SafeListItems{}
	return &this
}

// GetSafeListItems returns the SafeListItems field value if set, zero value otherwise.
func (o *TableauExtensionsDashboardV1SafeListItems) GetSafeListItems() []TableauExtensionsDashboardV1SafeListItem {
	if o == nil || o.SafeListItems == nil {
		var ret []TableauExtensionsDashboardV1SafeListItem
		return ret
	}
	return o.SafeListItems
}

// GetSafeListItemsOk returns a tuple with the SafeListItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauExtensionsDashboardV1SafeListItems) GetSafeListItemsOk() ([]TableauExtensionsDashboardV1SafeListItem, bool) {
	if o == nil || o.SafeListItems == nil {
		return nil, false
	}
	return o.SafeListItems, true
}

// HasSafeListItems returns a boolean if a field has been set.
func (o *TableauExtensionsDashboardV1SafeListItems) HasSafeListItems() bool {
	if o != nil && o.SafeListItems != nil {
		return true
	}

	return false
}

// SetSafeListItems gets a reference to the given []TableauExtensionsDashboardV1SafeListItem and assigns it to the SafeListItems field.
func (o *TableauExtensionsDashboardV1SafeListItems) SetSafeListItems(v []TableauExtensionsDashboardV1SafeListItem) {
	o.SafeListItems = v
}

func (o TableauExtensionsDashboardV1SafeListItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SafeListItems != nil {
		toSerialize["safe_list_items"] = o.SafeListItems
	}
	return json.Marshal(toSerialize)
}

type NullableTableauExtensionsDashboardV1SafeListItems struct {
	value *TableauExtensionsDashboardV1SafeListItems
	isSet bool
}

func (v NullableTableauExtensionsDashboardV1SafeListItems) Get() *TableauExtensionsDashboardV1SafeListItems {
	return v.value
}

func (v *NullableTableauExtensionsDashboardV1SafeListItems) Set(val *TableauExtensionsDashboardV1SafeListItems) {
	v.value = val
	v.isSet = true
}

func (v NullableTableauExtensionsDashboardV1SafeListItems) IsSet() bool {
	return v.isSet
}

func (v *NullableTableauExtensionsDashboardV1SafeListItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableauExtensionsDashboardV1SafeListItems(val *TableauExtensionsDashboardV1SafeListItems) *NullableTableauExtensionsDashboardV1SafeListItems {
	return &NullableTableauExtensionsDashboardV1SafeListItems{value: val, isSet: true}
}

func (v NullableTableauExtensionsDashboardV1SafeListItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableauExtensionsDashboardV1SafeListItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



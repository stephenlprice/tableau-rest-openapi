/*
 * API Reference for Tableau Resource Versioned RESTful Endpoints
 * >The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)
 *
 * The version of the OpenAPI document: 2021.2
 * Contact: stellopricint@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InvalidAuth;
import org.openapitools.client.model.InvalidConnectionHostName;
import org.openapitools.client.model.InvalidConnectionPassword;
import org.openapitools.client.model.InvalidConnectionPort;
import org.openapitools.client.model.InvalidConnectionSSLSettings;
import org.openapitools.client.model.InvalidConnectionType;
import org.openapitools.client.model.InvalidConnectionUsername;
import org.openapitools.client.model.MissingAuth;
import org.openapitools.client.model.MultipleConnectionsAttempted;
import org.openapitools.client.model.OneOfInvalidConnectionHostNameInvalidConnectionPortInvalidConnectionTypeInvalidConnectionUsernameInvalidConnectionPasswordInvalidConnectionSSLSettings;
import org.openapitools.client.model.OneOfInvalidConnectionHostNameInvalidConnectionTypeInvalidConnectionPortInvalidConnectionUsernameInvalidConnectionPasswordInvalidConnectionSSLSettings;
import org.openapitools.client.model.OneOfMissingAuthInvalidAuth;
import org.openapitools.client.model.OneOfMultipleConnectionsAttemptedInvalidConnectionHostNameInvalidConnectionPortInvalidConnectionTypeInvalidConnectionUsernameInvalidConnectionPasswordInvalidConnectionSSLSettings;
import org.openapitools.client.model.TableauAnalyticsextensionsV1ConnectionItem;
import org.openapitools.client.model.TableauAnalyticsextensionsV1ConnectionList;
import org.openapitools.client.model.TableauAnalyticsextensionsV1ConnectionMapping;
import org.openapitools.client.model.TableauAnalyticsextensionsV1ConnectionMetadata;
import org.openapitools.client.model.TableauAnalyticsextensionsV1ConnectionMetadataList;
import org.openapitools.client.model.TableauAnalyticsextensionsV1ServerSettings;
import org.openapitools.client.model.TableauAnalyticsextensionsV1SiteSettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AnalyticsExtensionsSettingsMethodsApi
 */
@Disabled
public class AnalyticsExtensionsSettingsMethodsApiTest {

    private final AnalyticsExtensionsSettingsMethodsApi api = new AnalyticsExtensionsSettingsMethodsApi();

    /**
     * Add analytics extension connection to site
     *
     * Adds a connection to an external service for analytics extensions on this site. Permissions - This method can be called by site and server administrators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAnalyticsExtensionsConnectionTest() throws ApiException {
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ConnectionItem tableauAnalyticsextensionsV1ConnectionItem = null;
        TableauAnalyticsextensionsV1ConnectionItem response = api.addAnalyticsExtensionsConnection(xTableauAuth, tableauAnalyticsextensionsV1ConnectionItem);
        // TODO: test validations
    }

    /**
     * Delete analytics extension connection from site
     *
     * Deletes a specific analytics extension connection for an external service from a site. Permissions - This method can be called by site and server administrators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAnalyticsExtensionsConnectionTest() throws ApiException {
        String connectionLuid = null;
        String xTableauAuth = null;
        api.deleteAnalyticsExtensionsConnection(connectionLuid, xTableauAuth);
        // TODO: test validations
    }

    /**
     * Remove current analytics extension connection for workbook
     *
     * Remove the currently used analytics extension connection to an external service  from the specified workbook. The connection remains configured, and is available for further usage by the workbook. Permissions - This method can be called by users with authoring access to the workbook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConnectionFromWorkbookTest() throws ApiException {
        String workbookLuid = null;
        String xTableauAuth = null;
        api.deleteConnectionFromWorkbook(workbookLuid, xTableauAuth);
        // TODO: test validations
    }

    /**
     * Get analytics extension details
     *
     * Get the details of a specified analytics extension connection to an external service. Permissions - This method can only be called by users with server or site administrator permissions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAnalyticsExtensionsConnectionTest() throws ApiException {
        String connectionLuid = null;
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ConnectionItem response = api.getAnalyticsExtensionsConnection(connectionLuid, xTableauAuth);
        // TODO: test validations
    }

    /**
     * List analytics extension connections on site
     *
     * Lists a site&#39;s analytics extension connections for external services. Permissions- This method can be called by site and server administrators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAnalyticsExtensionsConnectionsTest() throws ApiException {
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ConnectionList response = api.getAnalyticsExtensionsConnections(xTableauAuth);
        // TODO: test validations
    }

    /**
     * Get enabled state of analytics extensions on server
     *
     * Gets the enabled/disabled state of analytics extensions on a server. Permissions - This method can only be called by server administrators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAnalyticsExtensionsServerSettingsTest() throws ApiException {
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ServerSettings response = api.getAnalyticsExtensionsServerSettings(xTableauAuth);
        // TODO: test validations
    }

    /**
     * Get enabled state of analytics extensions on site
     *
     * Gets the enabled/disabled state of analytics extensions on a site. Permissions - This method can be called by site and server administrators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAnalyticsExtensionsSiteSettingsTest() throws ApiException {
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1SiteSettings response = api.getAnalyticsExtensionsSiteSettings(xTableauAuth);
        // TODO: test validations
    }

    /**
     * List analytics extension connections of workbook
     *
     * Lists basic details of each analytics extension connection available for a specified workbook, including connection type and name. Permissions - This method can be called by users that have permissions to the specified workbook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConnectionOptionsForWorkbookTest() throws ApiException {
        String workbookLuid = null;
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ConnectionMetadataList response = api.getConnectionOptionsForWorkbook(workbookLuid, xTableauAuth);
        // TODO: test validations
    }

    /**
     * Get current analytics extension for workbook
     *
     * Gets basic details, including connection type and name, of the analytics extension connection to an external service that the specified workbook is currently using. Permissions - This method can be called by users with authoring access to the workbook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelectedConnectionForWorkbookTest() throws ApiException {
        String workbookLuid = null;
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ConnectionMetadata response = api.getSelectedConnectionForWorkbook(workbookLuid, xTableauAuth);
        // TODO: test validations
    }

    /**
     * Update analytics extension connection of site
     *
     * Updates the details of specified analytics extension connection for an external service to a site. Permissions - This method can be called by site and server administrators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAnalyticsExtensionsConnectionTest() throws ApiException {
        String connectionLuid = null;
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ConnectionItem tableauAnalyticsextensionsV1ConnectionItem = null;
        TableauAnalyticsextensionsV1ConnectionItem response = api.updateAnalyticsExtensionsConnection(connectionLuid, xTableauAuth, tableauAnalyticsextensionsV1ConnectionItem);
        // TODO: test validations
    }

    /**
     * Enable/disable analytics extensions on server
     *
     * Enables or disables analytics extensions on a server. Permissions - This method can only be called by server administrators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAnalyticsExtensionsServerSettingsTest() throws ApiException {
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ServerSettings tableauAnalyticsextensionsV1ServerSettings = null;
        TableauAnalyticsextensionsV1ServerSettings response = api.updateAnalyticsExtensionsServerSettings(xTableauAuth, tableauAnalyticsextensionsV1ServerSettings);
        // TODO: test validations
    }

    /**
     * Update enabled state of analytics extensions on site
     *
     * Enables or disables analytics extensions on a site. Permissions - This method can be called by site and server administrators. Availability - This method is not available for Tableau Online.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAnalyticsExtensionsSiteSettingsTest() throws ApiException {
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1SiteSettings tableauAnalyticsextensionsV1SiteSettings = null;
        TableauAnalyticsextensionsV1SiteSettings response = api.updateAnalyticsExtensionsSiteSettings(xTableauAuth, tableauAnalyticsextensionsV1SiteSettings);
        // TODO: test validations
    }

    /**
     * Update analytics extension for workbook
     *
     * Updates the analytics extension connection to external service currently used by a workbook. Permissions - This method can be called by users that have permissions to the specified workbook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkbookWithConnectionTest() throws ApiException {
        String workbookLuid = null;
        String xTableauAuth = null;
        TableauAnalyticsextensionsV1ConnectionMapping tableauAnalyticsextensionsV1ConnectionMapping = null;
        TableauAnalyticsextensionsV1ConnectionMapping response = api.updateWorkbookWithConnection(workbookLuid, xTableauAuth, tableauAnalyticsextensionsV1ConnectionMapping);
        // TODO: test validations
    }

}

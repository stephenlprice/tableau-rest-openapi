/*
API Reference for Tableau Resource Versioned RESTful Endpoints

>The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)

API version: 2021.2
Contact: stellopricint@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TableauAnalyticsextensionsV1ServerSettings struct for TableauAnalyticsextensionsV1ServerSettings
type TableauAnalyticsextensionsV1ServerSettings struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// NewTableauAnalyticsextensionsV1ServerSettings instantiates a new TableauAnalyticsextensionsV1ServerSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableauAnalyticsextensionsV1ServerSettings() *TableauAnalyticsextensionsV1ServerSettings {
	this := TableauAnalyticsextensionsV1ServerSettings{}
	return &this
}

// NewTableauAnalyticsextensionsV1ServerSettingsWithDefaults instantiates a new TableauAnalyticsextensionsV1ServerSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableauAnalyticsextensionsV1ServerSettingsWithDefaults() *TableauAnalyticsextensionsV1ServerSettings {
	this := TableauAnalyticsextensionsV1ServerSettings{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ServerSettings) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ServerSettings) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ServerSettings) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *TableauAnalyticsextensionsV1ServerSettings) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o TableauAnalyticsextensionsV1ServerSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableTableauAnalyticsextensionsV1ServerSettings struct {
	value *TableauAnalyticsextensionsV1ServerSettings
	isSet bool
}

func (v NullableTableauAnalyticsextensionsV1ServerSettings) Get() *TableauAnalyticsextensionsV1ServerSettings {
	return v.value
}

func (v *NullableTableauAnalyticsextensionsV1ServerSettings) Set(val *TableauAnalyticsextensionsV1ServerSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableTableauAnalyticsextensionsV1ServerSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableTableauAnalyticsextensionsV1ServerSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableauAnalyticsextensionsV1ServerSettings(val *TableauAnalyticsextensionsV1ServerSettings) *NullableTableauAnalyticsextensionsV1ServerSettings {
	return &NullableTableauAnalyticsextensionsV1ServerSettings{value: val, isSet: true}
}

func (v NullableTableauAnalyticsextensionsV1ServerSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableauAnalyticsextensionsV1ServerSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
API Reference for Tableau Resource Versioned RESTful Endpoints

>The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)

API version: 2021.2
Contact: stellopricint@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TableauExtensionsDashboardV1SafeListItem A dashboard extension that is allowed to run on a site.
type TableauExtensionsDashboardV1SafeListItem struct {
	SafeListItemLuid *string `json:"safe_list_item_luid,omitempty"`
	// Location of the dashboard extension to be allowed on a site.
	Url *string `json:"url,omitempty"`
	// When true, the extension has access to underlying data of a workbook. This setting is only effective when the extension is on the site safe list. Default is false.
	AllowFullData *bool `json:"allow_full_data,omitempty"`
	// When true, the user will be prompted to grant an extension access to the underlying data of a workbook. This setting is only effective when the extension is on the site safe list. Default is false.
	PromptNeeded *bool `json:"prompt_needed,omitempty"`
}

// NewTableauExtensionsDashboardV1SafeListItem instantiates a new TableauExtensionsDashboardV1SafeListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableauExtensionsDashboardV1SafeListItem() *TableauExtensionsDashboardV1SafeListItem {
	this := TableauExtensionsDashboardV1SafeListItem{}
	return &this
}

// NewTableauExtensionsDashboardV1SafeListItemWithDefaults instantiates a new TableauExtensionsDashboardV1SafeListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableauExtensionsDashboardV1SafeListItemWithDefaults() *TableauExtensionsDashboardV1SafeListItem {
	this := TableauExtensionsDashboardV1SafeListItem{}
	return &this
}

// GetSafeListItemLuid returns the SafeListItemLuid field value if set, zero value otherwise.
func (o *TableauExtensionsDashboardV1SafeListItem) GetSafeListItemLuid() string {
	if o == nil || o.SafeListItemLuid == nil {
		var ret string
		return ret
	}
	return *o.SafeListItemLuid
}

// GetSafeListItemLuidOk returns a tuple with the SafeListItemLuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauExtensionsDashboardV1SafeListItem) GetSafeListItemLuidOk() (*string, bool) {
	if o == nil || o.SafeListItemLuid == nil {
		return nil, false
	}
	return o.SafeListItemLuid, true
}

// HasSafeListItemLuid returns a boolean if a field has been set.
func (o *TableauExtensionsDashboardV1SafeListItem) HasSafeListItemLuid() bool {
	if o != nil && o.SafeListItemLuid != nil {
		return true
	}

	return false
}

// SetSafeListItemLuid gets a reference to the given string and assigns it to the SafeListItemLuid field.
func (o *TableauExtensionsDashboardV1SafeListItem) SetSafeListItemLuid(v string) {
	o.SafeListItemLuid = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TableauExtensionsDashboardV1SafeListItem) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauExtensionsDashboardV1SafeListItem) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TableauExtensionsDashboardV1SafeListItem) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TableauExtensionsDashboardV1SafeListItem) SetUrl(v string) {
	o.Url = &v
}

// GetAllowFullData returns the AllowFullData field value if set, zero value otherwise.
func (o *TableauExtensionsDashboardV1SafeListItem) GetAllowFullData() bool {
	if o == nil || o.AllowFullData == nil {
		var ret bool
		return ret
	}
	return *o.AllowFullData
}

// GetAllowFullDataOk returns a tuple with the AllowFullData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauExtensionsDashboardV1SafeListItem) GetAllowFullDataOk() (*bool, bool) {
	if o == nil || o.AllowFullData == nil {
		return nil, false
	}
	return o.AllowFullData, true
}

// HasAllowFullData returns a boolean if a field has been set.
func (o *TableauExtensionsDashboardV1SafeListItem) HasAllowFullData() bool {
	if o != nil && o.AllowFullData != nil {
		return true
	}

	return false
}

// SetAllowFullData gets a reference to the given bool and assigns it to the AllowFullData field.
func (o *TableauExtensionsDashboardV1SafeListItem) SetAllowFullData(v bool) {
	o.AllowFullData = &v
}

// GetPromptNeeded returns the PromptNeeded field value if set, zero value otherwise.
func (o *TableauExtensionsDashboardV1SafeListItem) GetPromptNeeded() bool {
	if o == nil || o.PromptNeeded == nil {
		var ret bool
		return ret
	}
	return *o.PromptNeeded
}

// GetPromptNeededOk returns a tuple with the PromptNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauExtensionsDashboardV1SafeListItem) GetPromptNeededOk() (*bool, bool) {
	if o == nil || o.PromptNeeded == nil {
		return nil, false
	}
	return o.PromptNeeded, true
}

// HasPromptNeeded returns a boolean if a field has been set.
func (o *TableauExtensionsDashboardV1SafeListItem) HasPromptNeeded() bool {
	if o != nil && o.PromptNeeded != nil {
		return true
	}

	return false
}

// SetPromptNeeded gets a reference to the given bool and assigns it to the PromptNeeded field.
func (o *TableauExtensionsDashboardV1SafeListItem) SetPromptNeeded(v bool) {
	o.PromptNeeded = &v
}

func (o TableauExtensionsDashboardV1SafeListItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SafeListItemLuid != nil {
		toSerialize["safe_list_item_luid"] = o.SafeListItemLuid
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.AllowFullData != nil {
		toSerialize["allow_full_data"] = o.AllowFullData
	}
	if o.PromptNeeded != nil {
		toSerialize["prompt_needed"] = o.PromptNeeded
	}
	return json.Marshal(toSerialize)
}

type NullableTableauExtensionsDashboardV1SafeListItem struct {
	value *TableauExtensionsDashboardV1SafeListItem
	isSet bool
}

func (v NullableTableauExtensionsDashboardV1SafeListItem) Get() *TableauExtensionsDashboardV1SafeListItem {
	return v.value
}

func (v *NullableTableauExtensionsDashboardV1SafeListItem) Set(val *TableauExtensionsDashboardV1SafeListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTableauExtensionsDashboardV1SafeListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTableauExtensionsDashboardV1SafeListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableauExtensionsDashboardV1SafeListItem(val *TableauExtensionsDashboardV1SafeListItem) *NullableTableauExtensionsDashboardV1SafeListItem {
	return &NullableTableauExtensionsDashboardV1SafeListItem{value: val, isSet: true}
}

func (v NullableTableauExtensionsDashboardV1SafeListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableauExtensionsDashboardV1SafeListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
API Reference for Tableau Resource Versioned RESTful Endpoints

>The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)

API version: 2021.2
Contact: stellopricint@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TableauAnalyticsextensionsV1ConnectionMapping struct for TableauAnalyticsextensionsV1ConnectionMapping
type TableauAnalyticsextensionsV1ConnectionMapping struct {
	WorkbookLuid *string `json:"workbook_luid,omitempty"`
	ConnectionLuid *string `json:"connection_luid,omitempty"`
}

// NewTableauAnalyticsextensionsV1ConnectionMapping instantiates a new TableauAnalyticsextensionsV1ConnectionMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableauAnalyticsextensionsV1ConnectionMapping() *TableauAnalyticsextensionsV1ConnectionMapping {
	this := TableauAnalyticsextensionsV1ConnectionMapping{}
	return &this
}

// NewTableauAnalyticsextensionsV1ConnectionMappingWithDefaults instantiates a new TableauAnalyticsextensionsV1ConnectionMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableauAnalyticsextensionsV1ConnectionMappingWithDefaults() *TableauAnalyticsextensionsV1ConnectionMapping {
	this := TableauAnalyticsextensionsV1ConnectionMapping{}
	return &this
}

// GetWorkbookLuid returns the WorkbookLuid field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionMapping) GetWorkbookLuid() string {
	if o == nil || o.WorkbookLuid == nil {
		var ret string
		return ret
	}
	return *o.WorkbookLuid
}

// GetWorkbookLuidOk returns a tuple with the WorkbookLuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionMapping) GetWorkbookLuidOk() (*string, bool) {
	if o == nil || o.WorkbookLuid == nil {
		return nil, false
	}
	return o.WorkbookLuid, true
}

// HasWorkbookLuid returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionMapping) HasWorkbookLuid() bool {
	if o != nil && o.WorkbookLuid != nil {
		return true
	}

	return false
}

// SetWorkbookLuid gets a reference to the given string and assigns it to the WorkbookLuid field.
func (o *TableauAnalyticsextensionsV1ConnectionMapping) SetWorkbookLuid(v string) {
	o.WorkbookLuid = &v
}

// GetConnectionLuid returns the ConnectionLuid field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionMapping) GetConnectionLuid() string {
	if o == nil || o.ConnectionLuid == nil {
		var ret string
		return ret
	}
	return *o.ConnectionLuid
}

// GetConnectionLuidOk returns a tuple with the ConnectionLuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionMapping) GetConnectionLuidOk() (*string, bool) {
	if o == nil || o.ConnectionLuid == nil {
		return nil, false
	}
	return o.ConnectionLuid, true
}

// HasConnectionLuid returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionMapping) HasConnectionLuid() bool {
	if o != nil && o.ConnectionLuid != nil {
		return true
	}

	return false
}

// SetConnectionLuid gets a reference to the given string and assigns it to the ConnectionLuid field.
func (o *TableauAnalyticsextensionsV1ConnectionMapping) SetConnectionLuid(v string) {
	o.ConnectionLuid = &v
}

func (o TableauAnalyticsextensionsV1ConnectionMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WorkbookLuid != nil {
		toSerialize["workbook_luid"] = o.WorkbookLuid
	}
	if o.ConnectionLuid != nil {
		toSerialize["connection_luid"] = o.ConnectionLuid
	}
	return json.Marshal(toSerialize)
}

type NullableTableauAnalyticsextensionsV1ConnectionMapping struct {
	value *TableauAnalyticsextensionsV1ConnectionMapping
	isSet bool
}

func (v NullableTableauAnalyticsextensionsV1ConnectionMapping) Get() *TableauAnalyticsextensionsV1ConnectionMapping {
	return v.value
}

func (v *NullableTableauAnalyticsextensionsV1ConnectionMapping) Set(val *TableauAnalyticsextensionsV1ConnectionMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableTableauAnalyticsextensionsV1ConnectionMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableTableauAnalyticsextensionsV1ConnectionMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableauAnalyticsextensionsV1ConnectionMapping(val *TableauAnalyticsextensionsV1ConnectionMapping) *NullableTableauAnalyticsextensionsV1ConnectionMapping {
	return &NullableTableauAnalyticsextensionsV1ConnectionMapping{value: val, isSet: true}
}

func (v NullableTableauAnalyticsextensionsV1ConnectionMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableauAnalyticsextensionsV1ConnectionMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



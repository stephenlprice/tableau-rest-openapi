/*
API Reference for Tableau Resource Versioned RESTful Endpoints

>The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)

API version: 2021.2
Contact: stellopricint@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TableauAnalyticsextensionsV1ConnectionItem 
type TableauAnalyticsextensionsV1ConnectionItem struct {
	ConnectionLuid *string `json:"connection_luid,omitempty"`
	// Required. The location of an external service (TabPy, Rserve, EINSTEIN_DISCOVERY, Generic API, or other) that responds to your analytics extension requests. The case sensitive value must be a URI, IPv4 or IPv6 address that is a maximum of 255 Unicode characters.
	Host *string `json:"host,omitempty"`
	// Required. Integer between 1 and 65535.
	Port *int32 `json:"port,omitempty"`
	// For Tableau Online: The value is always true.     For on premise Tableau servers:  Optional. Set to true if authentication is enabled on the external service. If  true, username and password are required. Default is false.
	IsAuthEnabled *bool `json:"is_auth_enabled,omitempty"`
	// For Tableau Online: A username is always required.
	Username *string `json:"username,omitempty"`
	// For Tableau Online: A password is always required.
	Password *string `json:"password,omitempty"`
	// For Tableau Online: The value is always true.     For on premise Tableau servers:  Optional. Set to true if authentication is enabled on the external service. If  true, username and password are required. Default is false.
	IsSslEnabled *bool `json:"is_ssl_enabled,omitempty"`
	ConnectionBrief *TableauAnalyticsextensionsV1ConnectionBrief `json:"connection_brief,omitempty"`
}

// NewTableauAnalyticsextensionsV1ConnectionItem instantiates a new TableauAnalyticsextensionsV1ConnectionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableauAnalyticsextensionsV1ConnectionItem() *TableauAnalyticsextensionsV1ConnectionItem {
	this := TableauAnalyticsextensionsV1ConnectionItem{}
	return &this
}

// NewTableauAnalyticsextensionsV1ConnectionItemWithDefaults instantiates a new TableauAnalyticsextensionsV1ConnectionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableauAnalyticsextensionsV1ConnectionItemWithDefaults() *TableauAnalyticsextensionsV1ConnectionItem {
	this := TableauAnalyticsextensionsV1ConnectionItem{}
	return &this
}

// GetConnectionLuid returns the ConnectionLuid field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetConnectionLuid() string {
	if o == nil || o.ConnectionLuid == nil {
		var ret string
		return ret
	}
	return *o.ConnectionLuid
}

// GetConnectionLuidOk returns a tuple with the ConnectionLuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetConnectionLuidOk() (*string, bool) {
	if o == nil || o.ConnectionLuid == nil {
		return nil, false
	}
	return o.ConnectionLuid, true
}

// HasConnectionLuid returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) HasConnectionLuid() bool {
	if o != nil && o.ConnectionLuid != nil {
		return true
	}

	return false
}

// SetConnectionLuid gets a reference to the given string and assigns it to the ConnectionLuid field.
func (o *TableauAnalyticsextensionsV1ConnectionItem) SetConnectionLuid(v string) {
	o.ConnectionLuid = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *TableauAnalyticsextensionsV1ConnectionItem) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *TableauAnalyticsextensionsV1ConnectionItem) SetPort(v int32) {
	o.Port = &v
}

// GetIsAuthEnabled returns the IsAuthEnabled field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetIsAuthEnabled() bool {
	if o == nil || o.IsAuthEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsAuthEnabled
}

// GetIsAuthEnabledOk returns a tuple with the IsAuthEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetIsAuthEnabledOk() (*bool, bool) {
	if o == nil || o.IsAuthEnabled == nil {
		return nil, false
	}
	return o.IsAuthEnabled, true
}

// HasIsAuthEnabled returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) HasIsAuthEnabled() bool {
	if o != nil && o.IsAuthEnabled != nil {
		return true
	}

	return false
}

// SetIsAuthEnabled gets a reference to the given bool and assigns it to the IsAuthEnabled field.
func (o *TableauAnalyticsextensionsV1ConnectionItem) SetIsAuthEnabled(v bool) {
	o.IsAuthEnabled = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *TableauAnalyticsextensionsV1ConnectionItem) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *TableauAnalyticsextensionsV1ConnectionItem) SetPassword(v string) {
	o.Password = &v
}

// GetIsSslEnabled returns the IsSslEnabled field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetIsSslEnabled() bool {
	if o == nil || o.IsSslEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsSslEnabled
}

// GetIsSslEnabledOk returns a tuple with the IsSslEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetIsSslEnabledOk() (*bool, bool) {
	if o == nil || o.IsSslEnabled == nil {
		return nil, false
	}
	return o.IsSslEnabled, true
}

// HasIsSslEnabled returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) HasIsSslEnabled() bool {
	if o != nil && o.IsSslEnabled != nil {
		return true
	}

	return false
}

// SetIsSslEnabled gets a reference to the given bool and assigns it to the IsSslEnabled field.
func (o *TableauAnalyticsextensionsV1ConnectionItem) SetIsSslEnabled(v bool) {
	o.IsSslEnabled = &v
}

// GetConnectionBrief returns the ConnectionBrief field value if set, zero value otherwise.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetConnectionBrief() TableauAnalyticsextensionsV1ConnectionBrief {
	if o == nil || o.ConnectionBrief == nil {
		var ret TableauAnalyticsextensionsV1ConnectionBrief
		return ret
	}
	return *o.ConnectionBrief
}

// GetConnectionBriefOk returns a tuple with the ConnectionBrief field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) GetConnectionBriefOk() (*TableauAnalyticsextensionsV1ConnectionBrief, bool) {
	if o == nil || o.ConnectionBrief == nil {
		return nil, false
	}
	return o.ConnectionBrief, true
}

// HasConnectionBrief returns a boolean if a field has been set.
func (o *TableauAnalyticsextensionsV1ConnectionItem) HasConnectionBrief() bool {
	if o != nil && o.ConnectionBrief != nil {
		return true
	}

	return false
}

// SetConnectionBrief gets a reference to the given TableauAnalyticsextensionsV1ConnectionBrief and assigns it to the ConnectionBrief field.
func (o *TableauAnalyticsextensionsV1ConnectionItem) SetConnectionBrief(v TableauAnalyticsextensionsV1ConnectionBrief) {
	o.ConnectionBrief = &v
}

func (o TableauAnalyticsextensionsV1ConnectionItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionLuid != nil {
		toSerialize["connection_luid"] = o.ConnectionLuid
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.IsAuthEnabled != nil {
		toSerialize["is_auth_enabled"] = o.IsAuthEnabled
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.IsSslEnabled != nil {
		toSerialize["is_ssl_enabled"] = o.IsSslEnabled
	}
	if o.ConnectionBrief != nil {
		toSerialize["connection_brief"] = o.ConnectionBrief
	}
	return json.Marshal(toSerialize)
}

type NullableTableauAnalyticsextensionsV1ConnectionItem struct {
	value *TableauAnalyticsextensionsV1ConnectionItem
	isSet bool
}

func (v NullableTableauAnalyticsextensionsV1ConnectionItem) Get() *TableauAnalyticsextensionsV1ConnectionItem {
	return v.value
}

func (v *NullableTableauAnalyticsextensionsV1ConnectionItem) Set(val *TableauAnalyticsextensionsV1ConnectionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTableauAnalyticsextensionsV1ConnectionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTableauAnalyticsextensionsV1ConnectionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableauAnalyticsextensionsV1ConnectionItem(val *TableauAnalyticsextensionsV1ConnectionItem) *NullableTableauAnalyticsextensionsV1ConnectionItem {
	return &NullableTableauAnalyticsextensionsV1ConnectionItem{value: val, isSet: true}
}

func (v NullableTableauAnalyticsextensionsV1ConnectionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableauAnalyticsextensionsV1ConnectionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



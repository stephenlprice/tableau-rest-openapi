/*
 * API Reference for Tableau Resource Versioned RESTful Endpoints
 * >The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)
 *
 * The version of the OpenAPI document: 2021.2
 * Contact: stellopricint@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A dashboard extension that is blocked from running on a server.
 */
@ApiModel(description = "A dashboard extension that is blocked from running on a server.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-11T22:38:27.103297Z[Etc/UTC]")
public class TableauExtensionsDashboardV1BlockListItem {
  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_BLOCK_LIST_ITEM_LUID = "block_list_item_luid";
  @SerializedName(SERIALIZED_NAME_BLOCK_LIST_ITEM_LUID)
  private String blockListItemLuid;

  public TableauExtensionsDashboardV1BlockListItem() { 
  }

  public TableauExtensionsDashboardV1BlockListItem url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Location of the dashboard extension to be blocked from a site.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location of the dashboard extension to be blocked from a site.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public TableauExtensionsDashboardV1BlockListItem blockListItemLuid(String blockListItemLuid) {
    
    this.blockListItemLuid = blockListItemLuid;
    return this;
  }

   /**
   * Get blockListItemLuid
   * @return blockListItemLuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBlockListItemLuid() {
    return blockListItemLuid;
  }


  public void setBlockListItemLuid(String blockListItemLuid) {
    this.blockListItemLuid = blockListItemLuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableauExtensionsDashboardV1BlockListItem tableauExtensionsDashboardV1BlockListItem = (TableauExtensionsDashboardV1BlockListItem) o;
    return Objects.equals(this.url, tableauExtensionsDashboardV1BlockListItem.url) &&
        Objects.equals(this.blockListItemLuid, tableauExtensionsDashboardV1BlockListItem.blockListItemLuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, blockListItemLuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableauExtensionsDashboardV1BlockListItem {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    blockListItemLuid: ").append(toIndentedString(blockListItemLuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("url");
    openapiFields.add("block_list_item_luid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TableauExtensionsDashboardV1BlockListItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (TableauExtensionsDashboardV1BlockListItem.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in TableauExtensionsDashboardV1BlockListItem is not found in the empty JSON string", TableauExtensionsDashboardV1BlockListItem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TableauExtensionsDashboardV1BlockListItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TableauExtensionsDashboardV1BlockListItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("url") != null && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if (jsonObj.get("block_list_item_luid") != null && !jsonObj.get("block_list_item_luid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `block_list_item_luid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("block_list_item_luid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TableauExtensionsDashboardV1BlockListItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TableauExtensionsDashboardV1BlockListItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TableauExtensionsDashboardV1BlockListItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TableauExtensionsDashboardV1BlockListItem.class));

       return (TypeAdapter<T>) new TypeAdapter<TableauExtensionsDashboardV1BlockListItem>() {
           @Override
           public void write(JsonWriter out, TableauExtensionsDashboardV1BlockListItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TableauExtensionsDashboardV1BlockListItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TableauExtensionsDashboardV1BlockListItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TableauExtensionsDashboardV1BlockListItem
  * @throws IOException if the JSON string is invalid with respect to TableauExtensionsDashboardV1BlockListItem
  */
  public static TableauExtensionsDashboardV1BlockListItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TableauExtensionsDashboardV1BlockListItem.class);
  }

 /**
  * Convert an instance of TableauExtensionsDashboardV1BlockListItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


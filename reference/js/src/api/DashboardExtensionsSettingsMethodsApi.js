/**
 * API Reference for Tableau Resource Versioned RESTful Endpoints
 * >The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)
 *
 * The version of the OpenAPI document: 2021.2
 * Contact: stellopricint@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InvalidAuth from '../model/InvalidAuth';
import MissingAuth from '../model/MissingAuth';
import OneOfMissingAuthInvalidAuth from '../model/OneOfMissingAuthInvalidAuth';
import TableauExtensionsDashboardV1BlockListItem from '../model/TableauExtensionsDashboardV1BlockListItem';
import TableauExtensionsDashboardV1BlockListItems from '../model/TableauExtensionsDashboardV1BlockListItems';
import TableauExtensionsDashboardV1SafeListItem from '../model/TableauExtensionsDashboardV1SafeListItem';
import TableauExtensionsDashboardV1SafeListItems from '../model/TableauExtensionsDashboardV1SafeListItems';
import TableauExtensionsDashboardV1ServerSettings from '../model/TableauExtensionsDashboardV1ServerSettings';
import TableauExtensionsDashboardV1SiteSettings from '../model/TableauExtensionsDashboardV1SiteSettings';

/**
* DashboardExtensionsSettingsMethods service.
* @module api/DashboardExtensionsSettingsMethodsApi
* @version 2021.2
*/
export default class DashboardExtensionsSettingsMethodsApi {

    /**
    * Constructs a new DashboardExtensionsSettingsMethodsApi. 
    * @alias module:api/DashboardExtensionsSettingsMethodsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createDashboardExtensionsBlockListItem operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~createDashboardExtensionsBlockListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1BlockListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Block dashboard extension on server
     * Adds a dashboard extension to the block list of a server. Permissions - This method can only be called by server administrators. Availability - Not available for Tableau Online.
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:model/TableauExtensionsDashboardV1BlockListItem} opts.tableauExtensionsDashboardV1BlockListItem 
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~createDashboardExtensionsBlockListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1BlockListItem}
     */
    createDashboardExtensionsBlockListItem(opts, callback) {
      opts = opts || {};
      let postBody = opts['tableauExtensionsDashboardV1BlockListItem'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = ['application/vnd.tableau.extensions.dashboard.v1.BlockListItem+json'];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.BlockListItem+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1BlockListItem;
      return this.apiClient.callApi(
        '/api/-/settings/server/extensions/dashboard/blockListItems', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createDashboardExtensionsSafeListItem operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~createDashboardExtensionsSafeListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1SafeListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Allow dashboard extension on site
     * Adds a dashboard extension to the safe list the site you are signed into. Permissions - This method can be called by site and server administrators. Availability - Not available for Tableau Online.
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:model/TableauExtensionsDashboardV1SafeListItem} opts.tableauExtensionsDashboardV1SafeListItem 
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~createDashboardExtensionsSafeListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1SafeListItem}
     */
    createDashboardExtensionsSafeListItem(opts, callback) {
      opts = opts || {};
      let postBody = opts['tableauExtensionsDashboardV1SafeListItem'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = ['application/vnd.tableau.extensions.dashboard.v1.SafeListItem+json'];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.SafeListItem+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1SafeListItem;
      return this.apiClient.callApi(
        '/api/-/settings/site/extensions/dashboard/safeListItems', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteDashboardExtensionsBlockListItem operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~deleteDashboardExtensionsBlockListItemCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Unblock dashboard extension on server
     * Deletes a specific extension from the block list of a server. Permissions - This method can only be called by server administrators. Availability - Not available for Tableau Online.
     * @param {String} blockListItemLuid 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~deleteDashboardExtensionsBlockListItemCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteDashboardExtensionsBlockListItem(blockListItemLuid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'blockListItemLuid' is set
      if (blockListItemLuid === undefined || blockListItemLuid === null) {
        throw new Error("Missing the required parameter 'blockListItemLuid' when calling deleteDashboardExtensionsBlockListItem");
      }

      let pathParams = {
        'block_list_item_luid': blockListItemLuid
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/-/settings/server/extensions/dashboard/blockListItems/{block_list_item_luid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteDashboardExtensionsSafeListItem operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~deleteDashboardExtensionsSafeListItemCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disallow dashboard extension on site
     * Deletes a specific dashboard extension from the safe list of the site you are signed into. Permissions - This method can be called by site and server administrators.
     * @param {String} safeListItemLuid 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~deleteDashboardExtensionsSafeListItemCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteDashboardExtensionsSafeListItem(safeListItemLuid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'safeListItemLuid' is set
      if (safeListItemLuid === undefined || safeListItemLuid === null) {
        throw new Error("Missing the required parameter 'safeListItemLuid' when calling deleteDashboardExtensionsSafeListItem");
      }

      let pathParams = {
        'safe_list_item_luid': safeListItemLuid
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/-/settings/site/extensions/dashboard/safeListItems/{safe_list_item_luid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDashboardExtensionsBlockListItem operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsBlockListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1BlockListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get blocked dashboard extension on server
     * Gets the details of a specific dashboard extension on the blocked list of a server. Permissions - This method can only be called by server administrators. Availability - Not available for Tableau Online.
     * @param {String} blockListItemLuid 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsBlockListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1BlockListItem}
     */
    getDashboardExtensionsBlockListItem(blockListItemLuid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'blockListItemLuid' is set
      if (blockListItemLuid === undefined || blockListItemLuid === null) {
        throw new Error("Missing the required parameter 'blockListItemLuid' when calling getDashboardExtensionsBlockListItem");
      }

      let pathParams = {
        'block_list_item_luid': blockListItemLuid
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = [];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.BlockListItem+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1BlockListItem;
      return this.apiClient.callApi(
        '/api/-/settings/server/extensions/dashboard/blockListItems/{block_list_item_luid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDashboardExtensionsBlockListItems operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsBlockListItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1BlockListItems} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List blocked dashboard extensions on server
     * Lists the dashboard extensions on the blocked list of a server. Permissions - This method can only be called by server administrators. Availability - Not available for Tableau Online.
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsBlockListItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1BlockListItems}
     */
    getDashboardExtensionsBlockListItems(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = [];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.BlockListItems+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1BlockListItems;
      return this.apiClient.callApi(
        '/api/-/settings/server/extensions/dashboard/blockListItems', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDashboardExtensionsSafeListItem operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsSafeListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1SafeListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get allowed dashboard extension on site
     * Gets the details of a specific dashboard extension on the safe list of the site you are signed into. Permissions - This method can be called by site and server administrators.
     * @param {String} safeListItemLuid 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsSafeListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1SafeListItem}
     */
    getDashboardExtensionsSafeListItem(safeListItemLuid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'safeListItemLuid' is set
      if (safeListItemLuid === undefined || safeListItemLuid === null) {
        throw new Error("Missing the required parameter 'safeListItemLuid' when calling getDashboardExtensionsSafeListItem");
      }

      let pathParams = {
        'safe_list_item_luid': safeListItemLuid
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = [];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.SafeListItem+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1SafeListItem;
      return this.apiClient.callApi(
        '/api/-/settings/site/extensions/dashboard/safeListItems/{safe_list_item_luid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDashboardExtensionsSafeListItems operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsSafeListItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1SafeListItems} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists allowed dashboard extensions on site
     * Lists the dashboard extensions on the safe list of the site you are signed into. Permissions - This method can be called by site and server administrators.
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsSafeListItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1SafeListItems}
     */
    getDashboardExtensionsSafeListItems(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = [];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.SafeListItems+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1SafeListItems;
      return this.apiClient.callApi(
        '/api/-/settings/site/extensions/dashboard/safeListItems', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDashboardExtensionsServerSettings operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsServerSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1ServerSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List dashboard extension settings of server
     * Lists the dashboard extension settings of a server. Permissions - This method can only be called by server administrators. Availability - Not available for Tableau Online.
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsServerSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1ServerSettings}
     */
    getDashboardExtensionsServerSettings(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = [];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.ServerSettings+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1ServerSettings;
      return this.apiClient.callApi(
        '/api/-/settings/server/extensions/dashboard', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDashboardExtensionsSiteSettings operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsSiteSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1SiteSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List dashboard extension settings of site
     * Lists the dashboard extension settings of the site you are signed into. Permissions - This method can be called by site and server administrators.
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~getDashboardExtensionsSiteSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1SiteSettings}
     */
    getDashboardExtensionsSiteSettings(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = [];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.SiteSettings+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1SiteSettings;
      return this.apiClient.callApi(
        '/api/-/settings/site/extensions/dashboard', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDashboardExtensionsSafeListItem operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~updateDashboardExtensionsSafeListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1SafeListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update settings for allowed dashboard extension on site
     * Updates the settings of a specific dashboard extension in the safe list of the site you are signed into. Permissions - This method can be called by site and server administrators.
     * @param {Object} safeListItemLuid 
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:model/TableauExtensionsDashboardV1SafeListItem} opts.tableauExtensionsDashboardV1SafeListItem 
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~updateDashboardExtensionsSafeListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1SafeListItem}
     */
    updateDashboardExtensionsSafeListItem(safeListItemLuid, opts, callback) {
      opts = opts || {};
      let postBody = opts['tableauExtensionsDashboardV1SafeListItem'];
      // verify the required parameter 'safeListItemLuid' is set
      if (safeListItemLuid === undefined || safeListItemLuid === null) {
        throw new Error("Missing the required parameter 'safeListItemLuid' when calling updateDashboardExtensionsSafeListItem");
      }

      let pathParams = {
        'safe_list_item_luid': safeListItemLuid
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = ['application/vnd.tableau.extensions.dashboard.v1.SafeListItem+json'];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.SafeListItem+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1SafeListItem;
      return this.apiClient.callApi(
        '/api/-/settings/site/extensions/dashboard/safeListItems/{safe_list_item_luid}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDashboardExtensionsServerSettings operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~updateDashboardExtensionsServerSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1ServerSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update dashboard extensions settings of server
     * Updates the settings for dashboard extensions of a server. Permissions - This method can only be called by server administrators.
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:model/TableauExtensionsDashboardV1ServerSettings} opts.tableauExtensionsDashboardV1ServerSettings 
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~updateDashboardExtensionsServerSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1ServerSettings}
     */
    updateDashboardExtensionsServerSettings(opts, callback) {
      opts = opts || {};
      let postBody = opts['tableauExtensionsDashboardV1ServerSettings'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = ['application/vnd.tableau.extensions.dashboard.v1.ServerSettings+json'];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.ServerSettings+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1ServerSettings;
      return this.apiClient.callApi(
        '/api/-/settings/server/extensions/dashboard', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDashboardExtensionsSiteSettings operation.
     * @callback module:api/DashboardExtensionsSettingsMethodsApi~updateDashboardExtensionsSiteSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TableauExtensionsDashboardV1SiteSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update dashboard extension settings of site
     * Updates the settings for dashboard extensions for the site you are signed into. Permissions - This method can be called by site and server administrators.
     * @param {Object} opts Optional parameters
     * @param {String} opts.xTableauAuth The Tableau authentication header. The value is a credentials token from a Tableau server's response to an authentication request.    The Content-Type and Accept headers should be the mediatype of the request and response except in cases where you want to  [explicitly allow other versions of the resource](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm#per_resource_versioning).
     * @param {module:model/TableauExtensionsDashboardV1SiteSettings} opts.tableauExtensionsDashboardV1SiteSettings 
     * @param {module:api/DashboardExtensionsSettingsMethodsApi~updateDashboardExtensionsSiteSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TableauExtensionsDashboardV1SiteSettings}
     */
    updateDashboardExtensionsSiteSettings(opts, callback) {
      opts = opts || {};
      let postBody = opts['tableauExtensionsDashboardV1SiteSettings'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Tableau-Auth': opts['xTableauAuth']
      };
      let formParams = {
      };

      let authNames = ['X-Tableau-Auth'];
      let contentTypes = ['application/vnd.tableau.extensions.dashboard.v1.SiteSettings+json'];
      let accepts = ['application/vnd.tableau.extensions.dashboard.v1.SiteSettings+json', 'application/json'];
      let returnType = TableauExtensionsDashboardV1SiteSettings;
      return this.apiClient.callApi(
        '/api/-/settings/site/extensions/dashboard', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}

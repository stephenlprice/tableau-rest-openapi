/*
 * API Reference for Tableau Resource Versioned RESTful Endpoints
 * >The following OpenAPI documentation describes the details of the new Tableau RESTful APIs. A growing number of these are  being released alongside more than 150 [classic REST endpoints](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_ref.htm)  that are currently in wide usage in the Tableau community.    >There are some differences users of the classic endpoints will recognize when viewing these new endpoints. Request bodies for these new REST endpoints must  be formatted using JSON. Endpoint URIs don't contain an API version number. For more information, see  [REST API and Resource Versions](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm).   ![tableau platform](https://github.com/stephenlprice/tableau-rest-openapi/blob/main/assets/images/tableau-platform.png?raw=true)
 *
 * The version of the OpenAPI document: 2021.2
 * Contact: stellopricint@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TableauAnalyticsextensionsV1ConnectionBrief
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-11T22:38:27.103297Z[Etc/UTC]")
public class TableauAnalyticsextensionsV1ConnectionBrief {
  public static final String SERIALIZED_NAME_CONNECTION_NAME = "connection_name";
  @SerializedName(SERIALIZED_NAME_CONNECTION_NAME)
  private String connectionName;

  /**
   * Required. The kind of service responding to analytics extension requests. The value can be: TABPY, for a [Tableau TabPy](https://github.com/tableau/TabPy) server; GENERIC_API for your custom service that complies with the [Analytics Extensions API spec](https://tableau.github.io/analytics-extensions-api/docs/ae_intro.html); or RSERVE, for an [Rserve](https://www.tableau.com/solutions/r) service; or EINSTEIN_DISCOVERY for your instance of [Einstein Discovery](https://help.tableau.com/current/server-linux/en-us/config_r_tabpy.htm).
   */
  @JsonAdapter(ConnectionTypeEnum.Adapter.class)
  public enum ConnectionTypeEnum {
    UNDEFINED("UNDEFINED"),
    
    TABPY("TABPY"),
    
    RSERVE("RSERVE"),
    
    EINSTEIN_DISCOVERY("EINSTEIN_DISCOVERY"),
    
    GENERIC_API("GENERIC_API");

    private String value;

    ConnectionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ConnectionTypeEnum fromValue(String value) {
      for (ConnectionTypeEnum b : ConnectionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ConnectionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConnectionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConnectionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ConnectionTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CONNECTION_TYPE = "connection_type";
  @SerializedName(SERIALIZED_NAME_CONNECTION_TYPE)
  private ConnectionTypeEnum connectionType;

  public TableauAnalyticsextensionsV1ConnectionBrief() { 
  }

  public TableauAnalyticsextensionsV1ConnectionBrief connectionName(String connectionName) {
    
    this.connectionName = connectionName;
    return this;
  }

   /**
   * Required. The title of the connection.
   * @return connectionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required. The title of the connection.")

  public String getConnectionName() {
    return connectionName;
  }


  public void setConnectionName(String connectionName) {
    this.connectionName = connectionName;
  }


  public TableauAnalyticsextensionsV1ConnectionBrief connectionType(ConnectionTypeEnum connectionType) {
    
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Required. The kind of service responding to analytics extension requests. The value can be: TABPY, for a [Tableau TabPy](https://github.com/tableau/TabPy) server; GENERIC_API for your custom service that complies with the [Analytics Extensions API spec](https://tableau.github.io/analytics-extensions-api/docs/ae_intro.html); or RSERVE, for an [Rserve](https://www.tableau.com/solutions/r) service; or EINSTEIN_DISCOVERY for your instance of [Einstein Discovery](https://help.tableau.com/current/server-linux/en-us/config_r_tabpy.htm).
   * @return connectionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required. The kind of service responding to analytics extension requests. The value can be: TABPY, for a [Tableau TabPy](https://github.com/tableau/TabPy) server; GENERIC_API for your custom service that complies with the [Analytics Extensions API spec](https://tableau.github.io/analytics-extensions-api/docs/ae_intro.html); or RSERVE, for an [Rserve](https://www.tableau.com/solutions/r) service; or EINSTEIN_DISCOVERY for your instance of [Einstein Discovery](https://help.tableau.com/current/server-linux/en-us/config_r_tabpy.htm).")

  public ConnectionTypeEnum getConnectionType() {
    return connectionType;
  }


  public void setConnectionType(ConnectionTypeEnum connectionType) {
    this.connectionType = connectionType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableauAnalyticsextensionsV1ConnectionBrief tableauAnalyticsextensionsV1ConnectionBrief = (TableauAnalyticsextensionsV1ConnectionBrief) o;
    return Objects.equals(this.connectionName, tableauAnalyticsextensionsV1ConnectionBrief.connectionName) &&
        Objects.equals(this.connectionType, tableauAnalyticsextensionsV1ConnectionBrief.connectionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionName, connectionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableauAnalyticsextensionsV1ConnectionBrief {\n");
    sb.append("    connectionName: ").append(toIndentedString(connectionName)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("connection_name");
    openapiFields.add("connection_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TableauAnalyticsextensionsV1ConnectionBrief
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (TableauAnalyticsextensionsV1ConnectionBrief.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in TableauAnalyticsextensionsV1ConnectionBrief is not found in the empty JSON string", TableauAnalyticsextensionsV1ConnectionBrief.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TableauAnalyticsextensionsV1ConnectionBrief.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TableauAnalyticsextensionsV1ConnectionBrief` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("connection_name") != null && !jsonObj.get("connection_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connection_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connection_name").toString()));
      }
      if (jsonObj.get("connection_type") != null && !jsonObj.get("connection_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connection_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connection_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TableauAnalyticsextensionsV1ConnectionBrief.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TableauAnalyticsextensionsV1ConnectionBrief' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TableauAnalyticsextensionsV1ConnectionBrief> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TableauAnalyticsextensionsV1ConnectionBrief.class));

       return (TypeAdapter<T>) new TypeAdapter<TableauAnalyticsextensionsV1ConnectionBrief>() {
           @Override
           public void write(JsonWriter out, TableauAnalyticsextensionsV1ConnectionBrief value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TableauAnalyticsextensionsV1ConnectionBrief read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TableauAnalyticsextensionsV1ConnectionBrief given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TableauAnalyticsextensionsV1ConnectionBrief
  * @throws IOException if the JSON string is invalid with respect to TableauAnalyticsextensionsV1ConnectionBrief
  */
  public static TableauAnalyticsextensionsV1ConnectionBrief fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TableauAnalyticsextensionsV1ConnectionBrief.class);
  }

 /**
  * Convert an instance of TableauAnalyticsextensionsV1ConnectionBrief to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

